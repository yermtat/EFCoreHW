// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using homework02_imdbAPI.Contexts;

#nullable disable

namespace homework02_imdbAPI.Migrations
{
    [DbContext(typeof(ImdbBaseContext))]
    [Migration("20240128114537_Third")]
    partial class Third
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("homework02_imdbAPI.DataModels.Image", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<int>("Height")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "height");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "url");

                    b.Property<int>("Width")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "width");

                    b.HasKey("Id");

                    b.ToTable("Images");

                    b.HasAnnotation("Relational:JsonPropertyName", "image");
                });

            modelBuilder.Entity("homework02_imdbAPI.DataModels.Image1", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<int>("Height")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "height");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "url");

                    b.Property<int>("Width")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "width");

                    b.HasKey("Id");

                    b.ToTable("Image1");

                    b.HasAnnotation("Relational:JsonPropertyName", "image");
                });

            modelBuilder.Entity("homework02_imdbAPI.DataModels.Parenttitle", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<string>("ImageId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "title");

                    b.Property<string>("TitleType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "titleType");

                    b.Property<int>("Year")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "year");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.ToTable("Parenttitles");

                    b.HasAnnotation("Relational:JsonPropertyName", "parentTitle");
                });

            modelBuilder.Entity("homework02_imdbAPI.DataModels.Principal", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<string>("As")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "_as");

                    b.Property<string>("Attr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "attr");

                    b.Property<int>("Billing")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "billing");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "category");

                    b.Property<string>("Characters")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "characters");

                    b.Property<string>("Disambiguation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "disambiguation");

                    b.Property<int>("EndYear")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "endYear");

                    b.Property<int>("EpisodeCount")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "episodeCount");

                    b.Property<string>("LegacyNameText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "legacyNameText");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<string>("ResultId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("StartYear")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "startYear");

                    b.HasKey("Id");

                    b.HasIndex("ResultId");

                    b.ToTable("Principals");

                    b.HasAnnotation("Relational:JsonPropertyName", "principals");
                });

            modelBuilder.Entity("homework02_imdbAPI.DataModels.Result", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<int>("Episode")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "episode");

                    b.Property<string>("ImageId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NextEpisode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "nextEpisode");

                    b.Property<int>("NumberOfEpisodes")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "numberOfEpisodes");

                    b.Property<string>("ParentTitleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PreviousEpisode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "previousEpisode");

                    b.Property<int>("RunningTimeInMinutes")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "runningTimeInMinutes");

                    b.Property<int>("Season")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "season");

                    b.Property<int>("SeriesEndYear")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "seriesEndYear");

                    b.Property<int>("SeriesStartYear")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "seriesStartYear");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "title");

                    b.Property<string>("TitleType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "titleType");

                    b.Property<int>("Year")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "year");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.HasIndex("ParentTitleId");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("homework02_imdbAPI.DataModels.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("Character")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "character");

                    b.Property<string>("CharacterId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "characterId");

                    b.Property<string>("PrincipalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RoleId");

                    b.HasIndex("PrincipalId");

                    b.ToTable("Roles");

                    b.HasAnnotation("Relational:JsonPropertyName", "roles");
                });

            modelBuilder.Entity("homework02_imdbAPI.DataModels.Parenttitle", b =>
                {
                    b.HasOne("homework02_imdbAPI.DataModels.Image1", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("homework02_imdbAPI.DataModels.Principal", b =>
                {
                    b.HasOne("homework02_imdbAPI.DataModels.Result", "Result")
                        .WithMany("Principals")
                        .HasForeignKey("ResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Result");
                });

            modelBuilder.Entity("homework02_imdbAPI.DataModels.Result", b =>
                {
                    b.HasOne("homework02_imdbAPI.DataModels.Image", "Image")
                        .WithMany("Results")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("homework02_imdbAPI.DataModels.Parenttitle", "ParentTitle")
                        .WithMany()
                        .HasForeignKey("ParentTitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Image");

                    b.Navigation("ParentTitle");
                });

            modelBuilder.Entity("homework02_imdbAPI.DataModels.Role", b =>
                {
                    b.HasOne("homework02_imdbAPI.DataModels.Principal", "Principal")
                        .WithMany("Roles")
                        .HasForeignKey("PrincipalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Principal");
                });

            modelBuilder.Entity("homework02_imdbAPI.DataModels.Image", b =>
                {
                    b.Navigation("Results");
                });

            modelBuilder.Entity("homework02_imdbAPI.DataModels.Principal", b =>
                {
                    b.Navigation("Roles");
                });

            modelBuilder.Entity("homework02_imdbAPI.DataModels.Result", b =>
                {
                    b.Navigation("Principals");
                });
#pragma warning restore 612, 618
        }
    }
}
